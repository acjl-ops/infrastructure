---

- name: create .ssh directory for root user
  file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: 0700
  tags:
    - users
    - users_root

- name: add authorized keys for root
  template:
    src: root_authorized_keys.j2
    dest: /root/.ssh/authorized_keys
    mode: 0600
    owner: root
    group: root
  tags:
    - users
    - users_root

- name: create user groups
  group:
    name: '{{ item }}'
    state: present
    system: no
  with_items: '{{ user_groups }}'
  tags:
    - users
    - sudo
    - yay

- name: create system groups
  group:
    name: '{{ item }}'
    state: present
    system: no
  with_items: '{{ system_groups }}'
  tags:
    - users
    - sudo
    - yay

- name: create users
  user:
    name: '{{ item.key }}'
    group: users
    groups: '{{ item.value.groups | join(",") }}'
    comment: '{{ item.value.name }}'
    shell: '{{ item.value.shell | default("/bin/bash") }}'
    password: ''
    update_password: on_create
    state: present
  with_dict: '{{ users }}'
  tags:
    - users
    - sudo
    - yay

- name: create .ssh directory
  file:
    path: /home/{{item.key}}/.ssh
    state: directory
    owner: '{{ item.key }}'
    group: users
    mode: 0700
  with_dict: '{{ users }}'
  tags: users

- name: configure ssh keys
  template:
    src: authorized_keys.j2
    dest: /home/{{item.key}}/.ssh/authorized_keys
    owner: '{{ item.key }}'
    group: users
    mode: 0600
  when: item.value.ssh_key is defined
  with_dict: '{{ users }}'
  tags: users

- name: remove ssh keys if undefined
  file:
    path: /home/{{item.key}}/.ssh/authorized_keys
    state: absent
  when: item.value.ssh_key is not defined
  with_dict: '{{ users }}'
  tags: users

- name: get list of remote users
  find:
    paths: '/home'
    file_type: 'directory'
  register: all_users
  tags: users

- name: disable ssh keys of disabled users
  file:
    path: '/home/{{ item }}/.ssh/authorized_keys'
    state: absent
  when: item not in users
  with_items: '{{ all_users.files | map(attribute="path") | map("basename") | list }}'
  tags: users
