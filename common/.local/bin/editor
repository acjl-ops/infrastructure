#!/usr/bin/env bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  SCRIPT_FOLDER="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPT_FOLDER/$SOURCE"
done
SCRIPT_FOLDER="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
unset SOURCE

###############################################################################

function usage()
{
    echo "Usage: editor [OPTIONS] PATH"
    echo
    echo "Options:"
    echo
    echo "  -h --help         Print help"
    echo "  -g --goto <alias> Goto specified alias before edit"
    echo "     --nodetached   Don't try to run in a detached window"
    echo "     --nosession    Don't try to attach to a tmux session"
    echo
    echo "Report bugs to: <https://github.com/ljmf00/dotfiles/issues>"
}

function main()
{
    local galias='' gpath=.
    local insession=true detached=true

    local paths=()
    local args=
    args=$(getopt -o hg:                                  \
                   --long goto:,nodetached,nosession,help \
                   -n 'editor' -- "$@"                    \
          )

    # shellcheck disable=SC2181
    if [ $? != 0 ] ; then usage 1>&2; return 1; fi

    set -euo pipefail
    eval set -- "$args"

    while true; do
        case "$1" in
            --nosession )
                insession=false
                shift ;;
            --goto | -g    )
                galias="$2"

                # shellcheck disable=SC1090
                source "$HOME/.oh-luis-bash/goto-command.sh"

                gpath="$(goto -x "$galias" 2>/dev/null)"
                if [ "$gpath" = "" ]; then
                    echo "Invalid foto alias!" >&2
                    return 1
                fi

                shift 2 ;;
            --nodetached )
                detached=false
                shift ;;
            --help | -h     ) usage; return 0 ;;
            --              ) shift; break    ;;
            *               )        break    ;;
        esac
    done

    # expand paths after parsing
    paths=( "$@" )

    if hash nvim 2> /dev/null; then
        EDITOR='nvim'
        VISUAL='nvim'
    elif hash vim 2> /dev/null; then
        EDITOR='vim'
        VISUAL='vim'
    elif hash vi 2> /dev/null; then
        EDITOR='vi'
        VISUAL='vi'
    else
        echo "No suitable editor found" >&2
        return 1
    fi

    export EDITOR
    export VISUAL

    local inssh=false iskitty=false

    if [ -n "${SSH_CLIENT+x}" ] || [ -n "${SSH_TTY+x}" ]; then
        inssh=true
        detached=false
    fi

    # Deactivate checks since we don't control dependencies of this script
    set +eu

    # shellcheck disable=SC1090
    source "$HOME/.oh-luis-bash/term.sh"

    set -eu

    if [[ "$TERM" == "xterm-kitty" ]]; then
        iskitty=true
    fi

    echo "$iskitty" >/dev/null
    echo "$inssh" >/dev/null

    cd "$gpath"

    if [ "$insession" = true ]; then
        if [ "$detached" = false ] && [ -n "${TMUX+x}" ]; then
            # shellcheck disable=SC2016
            echo 'sessions should be nested with care, unset $TMUX to force' >&2
            return 1
        fi
        unset TMUX

        local edithash=
        edithash="editor-$(echo "$(pwd) ${paths:-.}" | sha224sum - | cut -d' ' -f1)"

        for ts in $(tmux ls | cut -d: -f1); do
            if [ "$ts" == "$edithash" ]; then
                if [ "$detached" = true ]; then
                    exec sensible-terminal tmux attach -t "$ts"
                fi
                exec tmux attach -t "$ts"
            fi
        done

        if [ "$detached" = true ]; then
            exec sensible-terminal tmux new -s "$edithash" "$EDITOR" "${paths:-.}"
        fi
        exec tmux new -s "$edithash" "$EDITOR" "${paths:-.}"
    fi

    if [ "$detached" = true ]; then
        exec sensible-terminal "$EDITOR" "${paths:-.}"
    fi
    exec "$EDITOR" "${paths:-.}"
}

main "$@"
